% clear; close all; clc;
% 
% %% 1. 定义需要遍历的瑞利数 (Ra) 列表
% % 在您的代码中变量名为 Re，但在热对流问题中通常指 Ra，这里我们遵循您的命名习惯
% Re_list = [1e8, 1e9, 1e10, 1e11, 1e12];
% num_cases = length(Re_list);
% 
% %% 2. 准备用于存储所有数据的容器 (Cell Arrays)
% all_t = cell(1, num_cases);
% all_instNu = cell(1, num_cases);
% all_instRe = cell(1, num_cases);
% all_meanNu = cell(1, num_cases);
% all_meanRe = cell(1, num_cases);
% legend_labels = cell(1, num_cases); % 用于存储图例标签
% 
% %% 3. 循环读取所有工况的数据
% fprintf('开始读取数据...\n');
% for i = 1:num_cases
%     Re = Re_list(i);
%     % 将数字转换为 '1e8' 这样的字符串格式，用于构建文件夹路径
%     Re_str = num2str(log10(Re), '1e%d'); 
%     
%     fprintf('  正在处理工况: Ra = %s\n', Re_str);
%     
%     % 构建文件路径
%     inputDir1 = fullfile(Re_str, 'timeseries_ReNu.plt');
%     inputDir2 = fullfile(Re_str, 'timeseries_ReNu_mean.plt');
%     
%     % 检查文件是否存在，如果不存在则跳过，避免报错
%     if ~exist(inputDir1, 'file') || ~exist(inputDir2, 'file')
%         warning('未找到工况 %s 的数据文件，将跳过此工况。', Re_str);
%         continue;
%     end
%     
%     % 读取数据
%     [inst, ~] = read_tecplot_plt(inputDir1);
%     [mean, ~] = read_tecplot_plt(inputDir2);
%     
%     % 将当前工况的数据存入 cell 数组
%     all_t{i}      = mean{1};
%     all_instNu{i} = inst{3};
%     all_instRe{i} = inst{2};
%     all_meanNu{i} = mean{3};
%     all_meanRe{i} = mean{2};
%     
%     % 创建图例标签，例如 'Ra = 1e8'
%     legend_labels{i} = ['\it{Ra}\rm{ = }' Re_str];
% end
% fprintf('所有数据读取完毕。\n\n');
% 
% %% 4. 统一绘图 (每张图包含所有 Ra 的曲线)
% % 假设您的 plot_matlab 函数能够接受 cell 数组作为 x 和 y 的输入来绘制多条曲线
% % 我们需要打开图例功能 'ShowLegend', 1，并传递标签
% 
% fprintf('正在生成组合图...\n');
% 
% % --- 图 1: 瞬时 Nu 对比 ---
% plot_matlab('x', all_t, 'y', all_instNu, ...
%             'CanvasRatio', [10, 7], ...
%             'Height', 540, ...
%             'Units', 'points', ...
%             'LineStyle', '-', ...
%             'LineWidth', 3, ...
%             'YLim',[1e1,1e3],...
%             'XLabel', '\it{t}', ...
%             'YLabel', '\it{Nu_{wall}}\rm{(}\it{t}\rm{)}', ...
%             'LogScale', 'y', ...
%             'Marker', 'none', ...
%             'ShowLegend', 0, ...
%             'Legend', legend_labels, ...
%             'OutputFilename', 'instNu_combined', ...
%             'Resolution', 600);
% 
% % --- 图 2: 瞬时 Re 对比 ---
% plot_matlab('x', all_t, 'y', all_instRe, ...
%             'CanvasRatio', [10, 7], ...
%             'Height', 540, ...
%             'Units', 'points', ...
%             'LineStyle', '-', ...
%             'LineWidth', 3, ...
%             'YLim',[1e3,2e6],...
%             'YTicks',[1e3,1e4,1e5,1e6],...
%             'XLabel', '\it{t}', ...
%             'YLabel', '\it{Re}\rm{(}\it{t}\rm{)}', ...
%             'LogScale', 'y', ...
%             'Marker', 'none', ...
%             'ShowLegend', 0, ...
%             'Legend', legend_labels, ...
%             'OutputFilename', 'instRe_combined', ...
%             'Resolution', 600);
% 
% % --- 图 3: 平均 Nu 对比 ---
% plot_matlab('x', all_t, 'y', all_meanNu, ...
%             'CanvasRatio', [10, 7], ...
%             'Height', 540, ...
%             'Units', 'points', ...
%             'LineStyle', '-', ...
%             'LineWidth', 3, ...
%             'YLim',[1e1,1e3],...
%             'XLabel', '\it{t}', ...
%             'YLabel', '\it{<Nu_{wall}}\rm{(}\it{t}\rm{)}\it{>}', ...
%             'LogScale', 'y', ...
%             'Marker', 'none', ...
%             'ShowLegend', 0, ...
%             'Legend', legend_labels, ...
%             'OutputFilename', 'meanNu_combined', ...
%             'Resolution', 600);
% 
% % --- 图 4: 平均 Re 对比 ---
% plot_matlab('x', all_t, 'y', all_meanRe, ...
%             'CanvasRatio', [10, 7], ...
%             'Height', 540, ...
%             'Units', 'points', ...
%             'LineStyle', '-', ...
%             'LineWidth', 3, ...
%             'YLim',[1e3,2e6],...
%             'YTicks',[1e3,1e4,1e5,1e6],...
%             'XLabel', '\it{t}', ...
%             'YLabel', '\it{<Re}\rm{(}\it{t}\rm{)}\it{>}', ...
%             'LogScale', 'y', ...
%             'Marker', 'none', ...
%             'ShowLegend', 0, ...
%             'Legend', legend_labels, ...
%             'OutputFilename', 'meanRe_combined', ...
%             'Resolution', 600);
% 
% fprintf('所有组合图已生成完毕。\n');
clear; close all; clc;

%% 1. 定义需要遍历的瑞利数 (Ra) 和对应的统计平稳起始时间
Re_list = [1e8, 1e9, 1e10, 1e11, 1e12];
% --- 这是您从图像中提供的核心数据 ---
ts_start_time = [2001, 2001, 2001, 2001, 1351]; % % [Ra1e8, Ra1e9, Ra1e10, Ra1e11, Ra1e12]

num_cases = length(Re_list);

%% 2. 定义颜色方案
% "前置" 部分的统一颜色 (假设 'color9' 是一个您希望的灰色或次要颜色)
% 注意: 您的 plot_matlab 函数默认颜色只有8种，这里我们直接定义一个灰色RGB值
pre_color_rgb ='color9'; % 一个中性灰色

% "统计平稳" 部分的颜色，按Ra数从低到高排列
main_colors = {'color8', 'color7', 'color4', 'color2', 'color1'}; % 从深蓝 -> 深红

%% 3. 准备用于存储所有数据分段的容器 (Cell Arrays)
% 每个工况将被拆分为两部分，所以总容量是 num_cases * 2
total_segments = num_cases * 2;
x_split = cell(1, total_segments);
y_instNu_split = cell(1, total_segments);
y_instRe_split = cell(1, total_segments);
y_meanNu_split = cell(1, total_segments);
y_meanRe_split = cell(1, total_segments);

plot_colors = cell(1, total_segments);
plot_legends = cell(1, total_segments);

%% 4. 循环读取数据、拆分并存储
fprintf('开始读取和处理数据...\n');
for i = 1:num_cases
    Re = Re_list(i);
    % 使用 '%1.0e' 格式正确地将数字转换为 '1e8' 这样的字符串
    Re_str = num2str(log10(Re), '1e%d'); 
    
    fprintf('  正在处理工况: Ra = %s\n', Re_str);
    
    % 构建文件路径
    inputDir1 = fullfile(Re_str, 'timeseries_ReNu.plt');
    inputDir2 = fullfile(Re_str, 'timeseries_ReNu_mean.plt');
    
    if ~exist(inputDir1, 'file') || ~exist(inputDir2, 'file')
        warning('未找到工况 %s 的数据文件，将跳过。', Re_str);
        continue;
    end
    
    % 读取数据
    [inst, ~] = read_tecplot_plt(inputDir1);
    [mean, ~] = read_tecplot_plt(inputDir2);
    
    t_full = mean{1};
    
    % --- 核心逻辑：找到时间分割点 ---
    start_time = ts_start_time(i);
    % 找到第一个大于等于起始时间的点的索引
    idx_split = find(t_full >= start_time, 1, 'first');
    
    % 处理边缘情况: 如果所有时间都小于start_time，则全部为"前置"
    if isempty(idx_split)
        idx_split = length(t_full) + 1;
    end
    
    % 定义两个时间段的索引
    pre_indices = 1:idx_split;
    post_indices = idx_split:length(t_full);
    
    % --- 填充数据、颜色和图例 ---
    % 计算在总的cell数组中的位置
    pre_segment_idx = (i-1)*2 + 1;
    post_segment_idx = (i-1)*2 + 2;

    % -- "前置" 数据段 --
    x_split{pre_segment_idx} = t_full(pre_indices);
    y_instNu_split{pre_segment_idx} = inst{3}(pre_indices);
    y_instRe_split{pre_segment_idx} = inst{2}(pre_indices);
    y_meanNu_split{pre_segment_idx} = mean{3}(pre_indices);
    y_meanRe_split{pre_segment_idx} = mean{2}(pre_indices);
    
    plot_colors{pre_segment_idx} = pre_color_rgb; % 使用灰色
    plot_legends{pre_segment_idx} = ''; % 前置部分没有图例

    % -- "统计平稳" 数据段 --
    if idx_split <= length(t_full) % 确保有 "post" 数据
        x_split{post_segment_idx} = t_full(post_indices);
        y_instNu_split{post_segment_idx} = inst{3}(post_indices);
        y_instRe_split{post_segment_idx} = inst{2}(post_indices);
        y_meanNu_split{post_segment_idx} = mean{3}(post_indices);
        y_meanRe_split{post_segment_idx} = mean{2}(post_indices);

        plot_colors{post_segment_idx} = main_colors{i}; % 使用指定的颜色
        plot_legends{post_segment_idx} = ['\it{Ra}\rm{ = }' Re_str]; % 主体部分有图例
    end
end
fprintf('所有数据处理完毕。\n\n');

%% 5. 统一绘图
fprintf('正在生成组合图...\n');

% --- 图 1: 瞬时 Nu 对比 ---
plot_matlab('x', x_split, 'y', y_instNu_split, ...
            'LineColor', plot_colors, ...
            'Legend', plot_legends, ...
            'ShowLegend', 0, ...
            'CanvasRatio', [10, 7], 'Height', 450, 'Units', 'points', ...
            'LineStyle', '-', 'LineWidth', 3, 'YLim',[1e1,1e3],...
            'XLabel', '\it{t}', 'YLabel', '\it{Nu_{wall}}\rm{(}\it{t}\rm{)}', ...
            'LogScale', 'y', 'Marker', 'none', ...
            'OutputFilename', 'instNu_combined_color', 'Resolution', 600);

% --- 图 2: 瞬时 Re 对比 ---
plot_matlab('x', x_split, 'y', y_instRe_split, ...
            'LineColor', plot_colors, ...
            'Legend', plot_legends, ...
            'ShowLegend', 0, ...
            'CanvasRatio', [10, 7], 'Height', 450, 'Units', 'points', ...
            'LineStyle', '-', 'LineWidth', 3, 'YLim',[1e3,2e6],...
            'YTicks',[1e3,1e4,1e5,1e6],...
            'XLabel', '\it{t}', 'YLabel', '\it{Re}\rm{(}\it{t}\rm{)}', ...
            'LogScale', 'y', 'Marker', 'none', ...
            'OutputFilename', 'instRe_combined_color', 'Resolution', 600);

% --- 图 3: 平均 Nu 对比 ---
plot_matlab('x', x_split, 'y', y_meanNu_split, ...
            'LineColor', plot_colors, ...
            'Legend', plot_legends, ...
            'ShowLegend', 0, ...
            'CanvasRatio', [10, 7], 'Height', 450, 'Units', 'points', ...
            'LineStyle', '-', 'LineWidth', 3, 'YLim',[1e1,1e3],...
            'XLabel', '\it{t}', 'YLabel', '\it{<Nu_{wall}}\rm{(}\it{t}\rm{)}\it{>}', ...
            'LogScale', 'y', 'Marker', 'none', ...
            'OutputFilename', 'meanNu_combined_color', 'Resolution', 600);

% --- 图 4: 平均 Re 对比 ---
plot_matlab('x', x_split, 'y', y_meanRe_split, ...
            'LineColor', plot_colors, ...
            'Legend', plot_legends, ...
            'ShowLegend', 0, ...
            'CanvasRatio', [10, 7], 'Height', 450, 'Units', 'points', ...
            'LineStyle', '-', 'LineWidth', 3, 'YLim',[1e3,2e6],...
            'YTicks',[1e3,1e4,1e5,1e6],...
            'XLabel', '\it{t}', 'YLabel', '\it{<Re}\rm{(}\it{t}\rm{)}\it{>}', ...
            'LogScale', 'y', 'Marker', 'none', ...
            'OutputFilename', 'meanRe_combined_color', 'Resolution', 600);

fprintf('所有组合图已生成完毕。\n');